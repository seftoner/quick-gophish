# Runtime container
FROM debian:bullseye-slim

ARG GOPHISH_UID=421
ARG GOPHISH_GID=${GOPHISH_UID}
ARG GOPHISH_USER="phisher"
ENV GOPHISH_GROUP=${GOPHISH_USER}
ENV GOPHISH_HOME="/home/${GOPHISH_USER}"

###
# Upgrade the system
###
RUN apt-get update --quiet --quiet \
    && apt-get upgrade --quiet --quiet

###
# Create unprivileged user
###
RUN groupadd --system --gid ${GOPHISH_GID} ${GOPHISH_GROUP} \
    && useradd --system --uid ${GOPHISH_UID} --gid ${GOPHISH_GROUP} --comment "${GOPHISH_USER} user" ${GOPHISH_USER}

###
# Install everything we need
#
# Install dependencies are only needed for software installation and
# will be removed at the end of the build process.
###
ENV DEPS \
    ca-certificates \
    libsqlite3-dev \
    sqlite3 \
    gcc
ENV INSTALL_DEPS \
    golang \
    git
RUN apt-get install --quiet --quiet --yes \
    --no-install-recommends --no-install-suggests \
    $DEPS $INSTALL_DEPS

WORKDIR ${GOPHISH_HOME}

RUN git clone https://github.com/kgretzky/gophish.git ${GOPHISH_HOME}/gophish \
    && cd ${GOPHISH_HOME}/gophish \
    && go build -o gophish

RUN chmod +x ${GOPHISH_HOME}/gophish/gophish \
    && ln --symbolic --no-dereference --force /run/secrets/config.json ${GOPHISH_HOME}/gophish/config.json \
    && mkdir --parents ${GOPHISH_HOME}/gophish/data \
    && ln --symbolic --no-dereference --force ${GOPHISH_HOME}/gophish/data/gophish.db ${GOPHISH_HOME}/gophish/gophish.db


###
# Remove install dependencies
###
RUN apt-get remove --quiet --quiet $INSTALL_DEPS

###
# Clean up aptitude cruft
###
RUN apt-get --quiet --quiet clean \
    && rm --recursive --force /var/lib/apt/lists/*

###
# Setup working directory and entrypoint
###
RUN chown --recursive ${GOPHISH_USER}:${GOPHISH_GROUP} ${GOPHISH_HOME}

###
# Prepare to run
###
USER ${GOPHISH_USER}:${GOPHISH_GROUP}
WORKDIR ${GOPHISH_HOME}/gophish
EXPOSE 3333/TCP 8080/TCP
ENTRYPOINT ["./gophish"]